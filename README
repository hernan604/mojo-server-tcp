NAME
    Mojo::Server::TCP - Generic TCP server

SYNOPSIS
      use Mojo::Server::TCP;
      my $echo = Mojo::Server::TCP->new(listen => ['tcp//*:9000']);

      $echo->on(read => sub {
        my($echo, $stream, $chunk) = @_;
        $stream->write($chunk);
      });

      $echo->start;

DESCRIPTION
    Mojo::Server::TCP is a generic TCP server based on the logic of the
    Mojo::Server::Daemon.

EVENTS
  close
      $self->on(close => sub { my($self, $stream) = @_ });

    Emitted safely if the stream gets closed.

  error
      $self->on(error => sub { my($self, $stream, $str) = @_ });

  read
      $self->on(error => sub { my($self, $stream, $chunk) = @_ });

    Emitted safely if new data arrives on the stream.

  timeout
      $self->on(timeout => sub { my($self, $stream) = @_ });

    Emitted safely if the stream has been inactive for too long and will get
    closed automatically.

ATTRIBUTES
  daemon_class
  listen
      my $listen = $daemon->listen;
      $daemon    = $daemon->listen(['tcp://localhost:3000']);

    List of one or more locations to listen on, defaults to "tcp://*:3000".

METHODS
  run
      $self = $self->run;

    Start accepting connections and run the server.

  start
      $self = $self->start;

    Start listening for connections. See also "run".

  stop
      $self = $self->stop;

    Stop the server.

AUTHOR
    Jan Henning Thorsen - "jhthorsen@cpan.org"

